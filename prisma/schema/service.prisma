model Service {
  id                  Int               @id @default(autoincrement())
  name                String
  rate                Float
  min_order           Int
  max_order           Int
  avg_time            String
  description         String            @db.Text
  updateText          String?           @db.Text
  userId              Int
  categoryId          Int
  favrouteCatId       Int?
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  deletedAt           DateTime?
  perqty              Int               @default(1000)
  serviceTypeId       Int?
  cancel              Boolean           @default(false)
  mode                String            @default("manual")
  refill              Boolean           @default(false)
  refillDays          Int?              @default(30)
  serviceSpeed        String?           @default("medium")
  refillDisplay       Int?              @default(24)
  providerId          Int?
  providerName        String?
  // Service type specific fields
  packageType         Int?              @default(1) // Service package type (1-15)
  apiServiceId        String?           // External API service ID
  apiProviderId       Int?              // External API provider ID
  dripfeedEnabled     Boolean           @default(false)
  subscriptionMin     Int?              // For subscription services
  subscriptionMax     Int?              // For subscription services
  subscriptionDelay   Int?              // For subscription services (in minutes)
  autoPostsMin        Int?              // For auto services
  autoPostsMax        Int?              // For auto services
  autoDelay           Int?              // For auto services (in minutes)
  customComments      String?           @db.Text // For custom comment services
  isSecret            Boolean           @default(false) // Secret service flag
  favoriteServices    FavoriteService[]
  newOrders           NewOrder[]
  category            Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  favrouteCat         FavrouteCat?      @relation(fields: [favrouteCatId], references: [id], onDelete: Cascade)
  serviceType         ServiceType?      @relation(fields: [serviceTypeId], references: [id])
  user                User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([categoryId], map: "Service_categoryId_fkey")
  @@index([favrouteCatId], map: "Service_favrouteCatId_fkey")
  @@index([serviceTypeId], map: "Service_serviceTypeId_idx")
  @@index([status], map: "Service_status_idx")
  @@index([userId], map: "Service_userId_idx")
  @@index([packageType], map: "Service_packageType_idx")
  @@map("service")
}
